#!/usr/bin/env bash

# exit when any command fails
set -e

# t
# A wrapper script for invoking `t` with podman
# Put this script in $PATH as `t`

PROGNAME="$(basename $0)"
VERSION="VERSION_PLACEHOLDER"
IMAGE_TAG="IMAGE_PLACEHOLDER:$VERSION"

# Helper functions for guards
error(){
  error_code=$1
  echo "ERROR: $2" >&2
  echo "($PROGNAME wrapper version: $VERSION, error code: $error_code )" &>2
  exit "$1"
}
check_cmd_in_path(){
  cmd=$1
  which "$cmd" > /dev/null 2>&1 || error 1 "$cmd not found!"
}

# Guards (checks for dependencies)
check_cmd_in_path podman

# Set up mounted volumes, environment, and run our containerized command
exec sudo podman run \
		--interactive --tty \
		--rm \
		--mount type=bind,source="$HOME/.config/t",target=/config \
		"$IMAGE_TAG" "$@"

# "atomicobject/ruby-cli-app:$VERSION" "$@"